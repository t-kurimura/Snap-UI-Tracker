name: Take Screenshot Workflow

on:
  push:
    branches:
      - sample/for_blog

jobs:
  screenshot:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lang: ['ja', 'en', 'zh']
        browser: ['chrome', 'edge']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: browser-actions/setup-chrome@latest
        if: matrix.browser == 'chrome'
      - uses: browser-actions/setup-edge@latest
        if: matrix.browser == 'edge'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Japanese fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto-cjk fonts-noto-cjk-extra

      - name: Install puppeteer-core
        run: |
          npm install puppeteer-core

      - name: Run Puppeteer script to take a screenshot
        run: |
          echo "Taking screenshot for ${{ matrix.lang }} using ${{ matrix.browser }}..."
          node -e "
            const puppeteer = require('puppeteer-core');
            (async () => {
              let browser;
              const launchOptions = {
                headless: true, // Ensure headless mode is enabled
                args: ['--no-sandbox', '--disable-setuid-sandbox']
              };
              
              switch ('${{ matrix.browser }}') {
                case 'chrome':
                  launchOptions.executablePath = '/usr/bin/google-chrome-stable';
                  break;
                case 'edge':
                  launchOptions.executablePath = '/usr/bin/microsoft-edge';
                  break;
              }
              
              browser = await puppeteer.launch(launchOptions);
              const page = await browser.newPage();
              await page.setViewport({ width: 1200, height: 800 });
              await page.setExtraHTTPHeaders({
                'Accept-Language': '${{ matrix.lang }}'
              });
              await page.goto(process.env.URL, { waitUntil: 'networkidle2' });
              await page.screenshot({
                path: process.env.FILENAME,
                fullPage: true
              });
              await browser.close();
            })();
          "
        env:
          URL: 'https://example.com'
          FILENAME: "example_${{ matrix.lang }}_${{ matrix.browser }}.png"

      - name: Upload Screenshot Artifact
        uses: actions/upload-artifact@v4
        with:
          name: screenshot-${{ matrix.lang }}-${{ matrix.browser }}
          path: "example_${{ matrix.lang }}_${{ matrix.browser }}.png"
          retention-days: 1
          if-no-files-found: error
          compression-level: 6